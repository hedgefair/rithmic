# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: request_get_instrument_by_underlying.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='request_get_instrument_by_underlying.proto',
  package='rti',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n*request_get_instrument_by_underlying.proto\x12\x03rti\"\x99\x01\n RequestGetInstrumentByUnderlying\x12\x15\n\x0btemplate_id\x18\xe3\xb6\t \x02(\x05\x12\x12\n\x08user_msg\x18\x98\x8d\x08 \x03(\t\x12\x1b\n\x11underlying_symbol\x18\xa2\x95\x06 \x01(\t\x12\x12\n\x08\x65xchange\x18\x95\xdc\x06 \x01(\t\x12\x19\n\x0f\x65xpiration_date\x18\xe3\x8d\x06 \x01(\t')
)




_REQUESTGETINSTRUMENTBYUNDERLYING = _descriptor.Descriptor(
  name='RequestGetInstrumentByUnderlying',
  full_name='rti.RequestGetInstrumentByUnderlying',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='template_id', full_name='rti.RequestGetInstrumentByUnderlying.template_id', index=0,
      number=154467, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_msg', full_name='rti.RequestGetInstrumentByUnderlying.user_msg', index=1,
      number=132760, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='underlying_symbol', full_name='rti.RequestGetInstrumentByUnderlying.underlying_symbol', index=2,
      number=101026, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exchange', full_name='rti.RequestGetInstrumentByUnderlying.exchange', index=3,
      number=110101, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expiration_date', full_name='rti.RequestGetInstrumentByUnderlying.expiration_date', index=4,
      number=100067, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=205,
)

DESCRIPTOR.message_types_by_name['RequestGetInstrumentByUnderlying'] = _REQUESTGETINSTRUMENTBYUNDERLYING
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RequestGetInstrumentByUnderlying = _reflection.GeneratedProtocolMessageType('RequestGetInstrumentByUnderlying', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTGETINSTRUMENTBYUNDERLYING,
  __module__ = 'request_get_instrument_by_underlying_pb2'
  # @@protoc_insertion_point(class_scope:rti.RequestGetInstrumentByUnderlying)
  ))
_sym_db.RegisterMessage(RequestGetInstrumentByUnderlying)


# @@protoc_insertion_point(module_scope)
